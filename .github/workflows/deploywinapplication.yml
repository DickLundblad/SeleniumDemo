name: Build Windows Installer Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:    # Allows manual triggering
    inputs:
      build-config:
        description: 'Build Configuration'
        type: choice
        options:
          - Release
          - Debug
        default: 'Release'
      platform:
        description: 'Target Platform'
        type: choice
        options:
          - x64
          - x86
        default: 'x64'

permissions:
  contents: read
  actions: read
  packages: write

jobs:
  build-installer:
    runs-on: windows-latest
    env:
      SOLUTION_FILE: 'SeleniumDemo.sln'  # Update to your solution file
      INSTALLER_PROJECT: 'SetupJobCrawlerWindowsApplication\SetupJobCrawlerWindowsApplication.vdproj'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'  # Adjust to your project's version

      - name: Find MSBuild Path
        id: find-msbuild
        run: |
          $vsPath = &"${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
          $msbuildPath = "$vsPath\MSBuild\Current\Bin\MSBuild.exe"
          echo "msbuild-path=$msbuildPath" >> $env:GITHUB_OUTPUT

      - name: Install VS Installer Projects Extension
        run: |
          $vsixUrl = "https://marketplace.visualstudio.com/_apis/public/gallery/publishers/VisualStudioClient/vsextensions/MicrosoftVisualStudio2017InstallerProjects/1.0.0/vspackage"
          $installer = "$env:RUNNER_TEMP\VSInstallerProjects.vsix"
          Invoke-WebRequest -Uri $vsixUrl -OutFile $installer
          
          $vsixInstaller = &"${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -property installationPath | Join-Path -ChildPath "Common7\IDE\VSIXInstaller.exe"
          & "$vsixInstaller" /q /a $installer

      - name: Build installer
        run: |
          & "${{ steps.find-msbuild.outputs.msbuild-path }}" "$env:INSTALLER_PROJECT" `
            /p:Configuration=${{ github.event.inputs.build-config || 'Release' }} `
            /p:Platform=x64 `
            /p:DeployOnBuild=true `
            /p:CreatePackageOnPublish=true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Installer
          path: SetupJobCrawlerWindowsApplication\${{ github.event.inputs.build-config || 'Release' }}/*.msi